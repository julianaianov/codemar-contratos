#!/bin/bash

# Script de configura√ß√£o inicial do Backend Laravel
echo "üöÄ Iniciando configura√ß√£o do Backend Laravel..."
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verifica se composer est√° instalado
if ! command -v composer &> /dev/null; then
    echo -e "${RED}‚ùå Composer n√£o encontrado. Por favor, instale o Composer primeiro.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úì Composer encontrado${NC}"

# Verifica se PHP est√° instalado
if ! command -v php &> /dev/null; then
    echo -e "${RED}‚ùå PHP n√£o encontrado. Por favor, instale o PHP 8.1 ou superior.${NC}"
    exit 1
fi

PHP_VERSION=$(php -v | head -n 1 | cut -d " " -f 2 | cut -d "." -f 1,2)
echo -e "${GREEN}‚úì PHP ${PHP_VERSION} encontrado${NC}"

# 1. Instalar depend√™ncias
echo ""
echo -e "${YELLOW}üì¶ Instalando depend√™ncias do Composer...${NC}"
composer install --no-interaction

# 2. Copiar arquivo .env
if [ ! -f .env ]; then
    echo ""
    echo -e "${YELLOW}üìù Copiando arquivo .env.example para .env...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úì Arquivo .env criado${NC}"
else
    echo -e "${YELLOW}‚ö† Arquivo .env j√° existe${NC}"
fi

# 3. Gerar chave da aplica√ß√£o
echo ""
echo -e "${YELLOW}üîë Gerando chave da aplica√ß√£o...${NC}"
php artisan key:generate

# 4. Criar diret√≥rios necess√°rios
echo ""
echo -e "${YELLOW}üìÅ Criando diret√≥rios necess√°rios...${NC}"
mkdir -p storage/app/imports
mkdir -p storage/app/examples
mkdir -p storage/framework/cache
mkdir -p storage/framework/sessions
mkdir -p storage/framework/views
mkdir -p storage/logs

echo -e "${GREEN}‚úì Diret√≥rios criados${NC}"

# 5. Configurar permiss√µes
echo ""
echo -e "${YELLOW}üîí Configurando permiss√µes...${NC}"
chmod -R 775 storage
chmod -R 775 bootstrap/cache

echo -e "${GREEN}‚úì Permiss√µes configuradas${NC}"

# 6. Perguntar sobre banco de dados
echo ""
echo -e "${YELLOW}üóÑÔ∏è  Configura√ß√£o do Banco de Dados${NC}"
echo ""
echo "Por favor, configure manualmente o arquivo .env com suas credenciais do banco de dados:"
echo ""
echo "  DB_CONNECTION=mysql (ou pgsql, sqlite)"
echo "  DB_HOST=127.0.0.1"
echo "  DB_PORT=3306"
echo "  DB_DATABASE=codemar_contratos"
echo "  DB_USERNAME=seu_usuario"
echo "  DB_PASSWORD=sua_senha"
echo ""
read -p "Pressione ENTER depois de configurar o .env..."

# 7. Executar migrations
echo ""
echo -e "${YELLOW}üóÑÔ∏è  Executando migrations...${NC}"
read -p "Deseja executar as migrations agora? (s/n): " RUN_MIGRATIONS

if [ "$RUN_MIGRATIONS" = "s" ] || [ "$RUN_MIGRATIONS" = "S" ]; then
    php artisan migrate
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úì Migrations executadas com sucesso${NC}"
    else
        echo -e "${RED}‚ùå Erro ao executar migrations. Verifique a configura√ß√£o do banco de dados.${NC}"
    fi
else
    echo -e "${YELLOW}‚ö† Migrations n√£o executadas. Execute manualmente: php artisan migrate${NC}"
fi

# 8. Criar link simb√≥lico para storage (opcional para produ√ß√£o)
echo ""
echo -e "${YELLOW}üîó Criando link simb√≥lico para storage...${NC}"
php artisan storage:link 2>/dev/null || echo -e "${YELLOW}‚ö† Link j√° existe ou n√£o foi poss√≠vel criar${NC}"

# 9. Limpar cache
echo ""
echo -e "${YELLOW}üßπ Limpando cache...${NC}"
php artisan config:clear
php artisan cache:clear
php artisan view:clear

echo -e "${GREEN}‚úì Cache limpo${NC}"

# Finaliza√ß√£o
echo ""
echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}‚úÖ Configura√ß√£o conclu√≠da com sucesso!${NC}"
echo -e "${GREEN}============================================${NC}"
echo ""
echo -e "${YELLOW}üìã Pr√≥ximos passos:${NC}"
echo ""
echo "1. Certifique-se de que o banco de dados est√° configurado no .env"
echo "2. Execute as migrations (se ainda n√£o executou):"
echo "   ${GREEN}php artisan migrate${NC}"
echo ""
echo "3. Inicie o servidor de desenvolvimento:"
echo "   ${GREEN}php artisan serve${NC}"
echo ""
echo "4. Acesse a API em:"
echo "   ${GREEN}http://localhost:8000/api/imports${NC}"
echo ""
echo "5. Para testar, use os arquivos de exemplo em:"
echo "   ${GREEN}storage/app/examples/${NC}"
echo ""
echo -e "${YELLOW}üìö Documenta√ß√£o completa em: README-IMPORTACAO.md${NC}"
echo ""

